# This is a basic workflow to help you get started with Actions

name: CI
env:
  FEDERALIST_URL: ${{ secrets.FEDERALIST_URL }}
  SHA: ${{ github.sha }}

# Controls when the action will run. 
on:
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: FranzDiebold/github-env-vars-action@v2
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 10.17.0 

      - name: GitHub Action for npx
        uses: mikeal/npx@1.0.0

#       - name: Get the latest commit on PR
#         id: get-latest-commit
#         if: ${{ github.event_name == 'pull_request' }}
#         uses: ActionsRML/get-PR-latest-commit@master
#         env: 
#           SHA: ${{ steps.get-latest-commit.outputs.latest_commit_sha }}
        
      - name: Install Headless Chrome dependencies
        run: |
          sudo apt-get install -yq \
          gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
          libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
          libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
          libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
          fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
          
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install --dev 

      - name: Create directories for xunit reports
        run: |
          mkdir -p __tests__/reports/unit
          mkdir -p __tests__/reports/browser
          mkdir -p __tests__/reports/e2e
    
      - name: Run Jest unit tests
        run: JEST_JUNIT_OUTPUT_DIR="__tests__/reports/unit" JEST_JUNIT_OUTPUT_NAME="unit.xml" npx jest --ci --reporters=default --reporters=jest-junit

      - name: Wait for Federalist Build
        run: __tests__/utility/ci.sh

      - name: Wait Buffer for browser testing
        run: sleep 30

      - name: Run Browser tests
        run: npx codeceptjs run --steps
               
      - name: Save assets
        uses: actions/upload-artifact@v2
        with:
          name: test-output
          path: __tests__/reports/
